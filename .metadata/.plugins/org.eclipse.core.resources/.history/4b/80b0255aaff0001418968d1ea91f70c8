package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.sql.DataSource;

import beani.Mnenje;

public class MnenjeDAO {

	@Resource(lookup="java:jboss/datasources/bhhg")
	DataSource ds;
	
	List<Mnenje> najdena = new ArrayList<Mnenje>();
	
	public MnenjeDAO() {
		kreirajTabelo();
	}
	
	public void kreirajTabelo(){
		Connection con = null;
		
		try {
			con = ds.getConnection();
			con.createStatement().execute("create table IF NOT EXISTS mnenje(idMnenja INT PRIMARY KEY AUTO_INCREMENT DEFAULT NULL,oseba VARCHAR(50),sumOcena INT,ocenaStoritev INT,ocenaLokacije INT, naslov VARCHAR(30),vsebina VARCHAR(300),vrstaIzleta VARCHAR(20),letniCas VARCHAR(10) )");
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			if(con!=null){
				try {
					con.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}
	}
	
	public void shrani(Mnenje m) throws SQLException{
		Connection con = ds.getConnection();
		try {
			con = ds.getConnection();
				PreparedStatement ps=con.prepareStatement("insert into mnenje(idMnenja,oseba,sumOcena,ocenaStoritev,ocenaLokacije,naslov,vsebina,vrstaIzleta,LetniCas ) values (?,?,?,?,?,?,?,?,?)");
				ps.setInt(1, m.getIdMnenja());
				ps.setString(2, m.getOsebaString());
				ps.setInt(3, m.getSumOcena());
				ps.setInt(4, m.getOcenaStoritev());
				ps.setInt(5,m.getOcenaLokacije());
				ps.setString(6, m.getNaslov());
				ps.setString(7,m.getVsebina());
				ps.setString(8, m.getVrstaIzleta());
				ps.setString(9,m.getLetniCas());
				ps.executeUpdate();
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		 finally {
			con.close();
		}
	}
	
	public List<Oseba> vrniVse() throws Exception {
		List<Oseba> ret=new ArrayList<Oseba>();
		Connection conn=null;
		try {
			conn=ds.getConnection();
			ResultSet rs=conn.createStatement().executeQuery("select * from registriranUporabnik");
			while (rs.next()) {
				Oseba o =new Oseba();
				o.setIdOsebe(rs.getInt("idOsebe"));
				o.setIme(rs.getString("ime"));
				o.setPriimek(rs.getString("priimek"));
				o.setEmail(rs.getString("email"));
				o.setTelefon(rs.getInt("telefon"));
				o.setTipOsebe(rs.getString("tipOsebe"));
				ret.add(o);
			}
			rs.close();
		} finally {
			conn.close();
		}
		return ret;
	}
	
	
	
	
	
	
	public List<Oseba> najdi(Oseba o, String priimek) throws Exception {
		
		Connection con=ds.getConnection();
		
		try {
			con=ds.getConnection();
			
			PreparedStatement ps = con.prepareStatement("select * from oseba where priimek=?");
			ps.setString(1, o.getPriimek());
			ResultSet rs=ps.executeQuery();
			while (rs.next()) {
				Oseba l = new Oseba();
				l.setIdOsebe(rs.getInt("idOsebe"));
				l.setIme(rs.getString("ime"));
				l.setPriimek(rs.getString("priimek"));
				l.setEmail(rs.getString("email"));
				l.setTelefon(rs.getInt("telefon"));
				l.setTipOsebe(rs.getString("tipOsebe"));
				najdene.add(l);
			}
		} finally {
			con.close();
		}
		return najdene;
	}
}
