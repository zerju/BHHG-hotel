package dao;

import java.sql.*;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;

import javax.annotation.Resource;
import javax.sql.DataSource;

import beani.Miza;

public class MizaDAO {
	
	@Resource(lookup="java:jboss/datasources/bhhg")
	DataSource ds;
	
	public MizaDAO(){
		kreirajTabelo();
	}
	
	public void kreirajTabelo(){
		Connection con = null;
		
		try {
			con = ds.getConnection();
			con.createStatement().execute("create table IF NOT EXISTS napoved(idMize INT PRIMARY KEY AUTO_INCREMENT DEFAULT NULL, ime VARCHAR(20), stMize INT,kapaciteta INT,posebneZahteveM VARCHAR(60),vrstaObroka VARCHAR(30),stGostov INT,uraPrihoda VARCHAR(5),zasedena BOOLEAN)");
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}finally{
			if(con!=null){
				try {
					con.close();
				} catch (SQLException e) {
					e.printStackTrace();
				}
			}
		}
	}
	
	
	public List<Miza> najdi(Miza m, int kapaciteta) throws Exception {
		//Napoved n= new Napoved();
		Connection con=ds.getConnection();
		//najdene = null;
		try {
			con=ds.getConnection();
			
			PreparedStatement ps = con.prepareStatement("select * from napoved where kapaciteta=?");
			ps.setInt(1, m.getKapaciteta());
			ResultSet rs=ps.executeQuery();
			while (rs.next()) {
				Miza l = new Miza();
				l.setPodrocje(rs.getString("podrocje"));
				l.setDatum(rs.getString("datum"));
				l.setDelDneva(rs.getString("delDneva"));
				l.setTip(rs.getString("tip"));
				l.setTemperatura(rs.getDouble("temperatura"));
				l.setSmerVetra(rs.getString("smerVetra"));
				l.setHitrostVetra(rs.getDouble("hitrostVetra"));
				l.setSunkiVetra(rs.getDouble("sunkiVetra"));
				l.setId(rs.getInt("id"));
				l.setDejansko(rs.getString("dejansko"));
				najdene.add(l);
			}
		} finally {
			con.close();
		}
		return najdene;
	}
}
